name: CI/CD for Claude Dev

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  NODE_VERSION: '20'
  VSIX_NAME: 'adam-vscode.vsix'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install dependencies
      run: npm run install:all
    - name: Run linter
      run: npm run lint
    - name: Increment version
      id: increment-version
      run: |
        current_version=$(node -p "require('./package.json').version")
        echo "Current version: $current_version"
        
        new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "New version: $new_version"
        
        sed -i 's/"version": "'$current_version'"/"version": "'$new_version'"/' package.json
        
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
    - name: Build extension
      run: npm run package
    - name: Install vsce
      run: npm install -g @vscode/vsce
    - name: Package Extension
      run: vsce package -o ${{ env.VSIX_NAME }}
    - name: Upload to Azure Blob Storage
      uses: azure/CLI@v1
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      with:
        inlineScript: |
          if [ -z "$AZURE_STORAGE_CONNECTION_STRING" ]; then
            echo "Error: AZURE_STORAGE_CONNECTION_STRING is empty"
            exit 1
          fi
          
          echo "Uploading VSIX file..."
          az storage blob upload --container-name vscode-extension --file "${{ env.VSIX_NAME }}" --name "${{ env.VSIX_NAME }}" --overwrite true
          if [ $? -ne 0 ]; then
            echo "Error: Failed to upload VSIX file"
            exit 1
          fi
          
          echo "Creating and uploading version.txt..."
          echo "${{ env.VSIX_NAME }}" > version.txt
          az storage blob upload --container-name vscode-extension --file version.txt --name version.txt --overwrite true
          if [ $? -ne 0 ]; then
            echo "Error: Failed to upload version.txt"
            exit 1
          fi
          
          echo "Upload completed successfully"
    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ steps.increment-version.outputs.new_version }}" \
          --title "Release v${{ steps.increment-version.outputs.new_version }}" \
          --notes "Release notes for version ${{ steps.increment-version.outputs.new_version }}" \
          "${{ env.VSIX_NAME }}"
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "Bump version to ${{ steps.increment-version.outputs.new_version }} [skip ci]"
        git push
