name: CI/CD for Claude Dev

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm run install:all

    - name: Run linter
      run: npm run lint

    - name: Build extension
      run: npm run package

    - name: Install vsce
      run: npm install -g @vscode/vsce

    - name: Package Extension
      run: vsce package

    - name: Upload VSIX as artifact
      uses: actions/upload-artifact@v2
      with:
        name: vsix-package
        path: "*.vsix"

  publish:
    needs: build
    if: contains(github.event.head_commit.message, 'publish:v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download VSIX artifact
      uses: actions/download-artifact@v2
      with:
        name: vsix-package

    - name: Get VSIX filename
      id: get-vsix
      run: |
        echo "vsix_name=$(ls *.vsix)" >> $GITHUB_OUTPUT

    - name: Upload to Azure Blob Storage
      uses: azure/CLI@v1
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      with:
        inlineScript: |
          az storage blob upload --container-name vscode-extension --file "${{ steps.get-vsix.outputs.vsix_name }}" --name "${{ steps.get-vsix.outputs.vsix_name }}" --overwrite true
          echo "${{ steps.get-vsix.outputs.vsix_name }}" > version.txt
          az storage blob upload --container-name vscode-extension --file version.txt --name version.txt --overwrite true

    - name: Extract version from commit message
      id: get_version
      run: echo "VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -oP 'publish:v\K[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get-vsix.outputs.vsix_name }}
        asset_name: ${{ steps.get-vsix.outputs.vsix_name }}
        asset_content_type: application/octet-stream
